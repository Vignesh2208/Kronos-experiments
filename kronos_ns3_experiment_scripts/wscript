## -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-
def configure(cnf):
    # other parameters omitted for brevity
    cnf.check(lib=["kronosapi"])

def build(bld):
    #bld(use=["kronosapi"])
    obj = bld.create_ns3_program('simulation', ['csma', 'tap-bridge', 'mobility', 'wifi', 'internet'])
    obj.source = ['simulation.cc', 'start_lxcs.cc']
    obj.env.append_value("LINKFLAGS", ["-lkronosapi"])
    obj.env.append_value("LIB", ["kronosapi"])
    
    obj = bld.create_ns3_program('simple_p2p_network',
                                 ['csma', 'point-to-point', 'internet', 'nix-vector-routing', 'applications', 'tap-bridge', 'internet', 'bridge', 'applications'])
    obj.source = ['simple_p2p_network.cc', 'start_lxcs.cc']
    obj.env.append_value("LINKFLAGS", ["-lkronosapi"])
    obj.env.append_value("LIB", ["kronosapi"])


    obj = bld.create_ns3_program('exp_testbed',
                                 ['csma', 'point-to-point', 'internet', 'nix-vector-routing', 'applications', 'tap-bridge', 'internet', 'bridge', 'applications'])
    obj.source = ['exp_testbed.cc', 'start_lxcs.cc']
    obj.env.append_value("LINKFLAGS", ["-lkronosapi"])
    obj.env.append_value("LIB", ["kronosapi"])


    obj = bld.create_ns3_program('campus_network',
                                 ['csma', 'point-to-point', 'internet', 'nix-vector-routing', 'applications', 'tap-bridge', 'internet', 'bridge', 'applications'])
    obj.source = ['campus_network.cc', 'start_lxcs.cc']
    obj.env.append_value("LINKFLAGS", ["-lkronosapi"])
    obj.env.append_value("LIB", ["kronosapi"])

